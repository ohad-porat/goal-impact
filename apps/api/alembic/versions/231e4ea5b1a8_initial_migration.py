"""Initial migration

Revision ID: 231e4ea5b1a8
Revises: 
Create Date: 2025-10-17 18:34:08.687789

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '231e4ea5b1a8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('goal_value_lookup',
    sa.Column('minute', sa.Integer(), nullable=False),
    sa.Column('score_diff', sa.Integer(), nullable=False),
    sa.Column('goal_value', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('minute', 'score_diff')
    )
    op.create_table('nations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('governing_body', sa.String(), nullable=True),
    sa.Column('country_code', sa.String(), nullable=False),
    sa.Column('fbref_url', sa.String(), nullable=False),
    sa.Column('clubs_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('country_code'),
    sa.UniqueConstraint('fbref_url'),
    sa.UniqueConstraint('name')
    )
    op.create_table('stats_calculation_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calculation_date', sa.DateTime(), nullable=False),
    sa.Column('total_goals_processed', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('competitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('competition_type', sa.String(), nullable=True),
    sa.Column('tier', sa.String(), nullable=True),
    sa.Column('fbref_id', sa.String(), nullable=False),
    sa.Column('fbref_url', sa.String(), nullable=False),
    sa.Column('nation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['nation_id'], ['nations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbref_id'),
    sa.UniqueConstraint('fbref_url')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('fbref_id', sa.String(), nullable=False),
    sa.Column('fbref_url', sa.String(), nullable=False),
    sa.Column('nation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['nation_id'], ['nations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbref_id'),
    sa.UniqueConstraint('fbref_url')
    )
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('fbref_id', sa.String(), nullable=False),
    sa.Column('fbref_url', sa.String(), nullable=True),
    sa.Column('nation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['nation_id'], ['nations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbref_id'),
    sa.UniqueConstraint('fbref_url', name='unique_non_null_fbref_url')
    )
    op.create_table('seasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('fbref_url', sa.String(), nullable=False),
    sa.Column('matches_url', sa.String(), nullable=True),
    sa.Column('competition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbref_url')
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('home_team_goals', sa.Integer(), nullable=True),
    sa.Column('away_team_goals', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('fbref_id', sa.String(), nullable=False),
    sa.Column('fbref_url', sa.String(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.Column('home_team_id', sa.Integer(), nullable=True),
    sa.Column('away_team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['away_team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['home_team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbref_id'),
    sa.UniqueConstraint('fbref_url')
    )
    op.create_table('player_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('matches_played', sa.Integer(), nullable=True),
    sa.Column('matches_started', sa.Integer(), nullable=True),
    sa.Column('total_minutes', sa.Integer(), nullable=True),
    sa.Column('minutes_divided_90', sa.Float(), nullable=True),
    sa.Column('goals_scored', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('total_goal_assists', sa.Integer(), nullable=True),
    sa.Column('non_pk_goals', sa.Integer(), nullable=True),
    sa.Column('pk_made', sa.Integer(), nullable=True),
    sa.Column('pk_attempted', sa.Integer(), nullable=True),
    sa.Column('yellow_cards', sa.Integer(), nullable=True),
    sa.Column('red_cards', sa.Integer(), nullable=True),
    sa.Column('xg', sa.Float(), nullable=True),
    sa.Column('non_pk_xg', sa.Float(), nullable=True),
    sa.Column('xag', sa.Float(), nullable=True),
    sa.Column('npxg_and_xag', sa.Float(), nullable=True),
    sa.Column('progressive_carries', sa.Integer(), nullable=True),
    sa.Column('progressive_passes', sa.Integer(), nullable=True),
    sa.Column('progressive_passes_received', sa.Integer(), nullable=True),
    sa.Column('goal_per_90', sa.Float(), nullable=True),
    sa.Column('assists_per_90', sa.Float(), nullable=True),
    sa.Column('total_goals_assists_per_90', sa.Float(), nullable=True),
    sa.Column('non_pk_goals_per_90', sa.Float(), nullable=True),
    sa.Column('non_pk_goal_and_assists_per_90', sa.Float(), nullable=True),
    sa.Column('xg_per_90', sa.Float(), nullable=True),
    sa.Column('xag_per_90', sa.Float(), nullable=True),
    sa.Column('total_xg_xag_per_90', sa.Float(), nullable=True),
    sa.Column('non_pk_xg_per_90', sa.Float(), nullable=True),
    sa.Column('npxg_and_xag_per_90', sa.Float(), nullable=True),
    sa.Column('goal_value', sa.Float(), nullable=True),
    sa.Column('gv_avg', sa.Float(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('player_id', 'season_id', 'team_id', name='unique_player_season_team')
    )
    op.create_table('team_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fbref_url', sa.String(), nullable=False),
    sa.Column('goal_logs_url', sa.String(), nullable=True),
    sa.Column('ranking', sa.Integer(), nullable=True),
    sa.Column('matches_played', sa.Integer(), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('draws', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('goals_for', sa.Integer(), nullable=True),
    sa.Column('goals_against', sa.Integer(), nullable=True),
    sa.Column('goal_difference', sa.Integer(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('points_per_match', sa.Float(), nullable=True),
    sa.Column('xg', sa.Float(), nullable=True),
    sa.Column('xga', sa.Float(), nullable=True),
    sa.Column('xgd', sa.Float(), nullable=True),
    sa.Column('xgd_per_90', sa.Float(), nullable=True),
    sa.Column('attendance', sa.Float(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbref_url')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=True),
    sa.Column('minute', sa.Integer(), nullable=True),
    sa.Column('home_team_goals_pre_event', sa.Integer(), nullable=True),
    sa.Column('away_team_goals_pre_event', sa.Integer(), nullable=True),
    sa.Column('home_team_goals_post_event', sa.Integer(), nullable=True),
    sa.Column('away_team_goals_post_event', sa.Integer(), nullable=True),
    sa.Column('xg', sa.Float(), nullable=True),
    sa.Column('post_shot_xg', sa.Float(), nullable=True),
    sa.Column('xg_difference', sa.Float(), nullable=True),
    sa.Column('goal_value', sa.Float(), nullable=True),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('match_id', 'player_id', 'minute', 'event_type', name='unique_match_player_minute_event')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('events')
    op.drop_table('team_stats')
    op.drop_table('player_stats')
    op.drop_table('matches')
    op.drop_table('seasons')
    op.drop_table('teams')
    op.drop_table('players')
    op.drop_table('competitions')
    op.drop_table('stats_calculation_metadata')
    op.drop_table('nations')
    op.drop_table('goal_value_lookup')
    # ### end Alembic commands ###
